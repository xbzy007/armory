#!/bin/bash
#########################
# benchmark disk
#
#########################

curtdir=$(cd `dirname $0` && pwd)

source ${curtdir}/../../common/setenv.sh 

genHead() {

cat << EOF > $FNAME

[global]

ioengine=libaio
iodepth=${IODEPTH}
rw=${METHOD}
#rwmixread=0
bs=${BS}
time_based
runtime=${RUNTIME}
#loops=10
direct=1
#size=${SIZE}

EOF
}


genTask() {

local taskname="$1"
cat << EOF >> $FNAME

[${taskname}]
cpus_allowed=${2}
filename=${3}
offset=0g
size=${4}

EOF
}


preconf()
{
#1.81TB BUG
#lsscsi -s | grep B$ | sed 's/.*\ \//\//g;s/GB//g;s/TB/000/g' | awk '{if($2 > 256) print $2,$1}' | sort -n | while read line; do echo $line; done
diskinfo=$(lsscsi -s |grep -v sda | grep B$ | awk 'BEGIN{OFS="--"}{print $(NF -1),$NF}')
#echo $diskinfo
diskinfo_arr=(${diskinfo// / })
#echo $diskinfo_arr
i=0
for ((j=0;j<${#diskinfo_arr[@]};j++))
do 
        echo ${diskinfo_arr[$j]}
        DEV=$(echo ${diskinfo_arr[$j]} | awk -F'--' '{print $1}')
        SizeGiB=$(echo ${diskinfo_arr[$j]} | awk -F'--' '{print $2}' | numfmt --from=si --suffix=B | sed -e 's/B//' | awk '{printf "%.00f\n", $1/1024/1024/1024}' )
        if [ $SizeGiB -lt 256 ]; then
                #echo "Skip $DEV $SizeGiB GiB"
                continue;
        fi
        let i+=1
        genTask $DEV $((i % NLCPU)) ${DEV} ${SizeGiB}G 
        #echo $DEV $SizeGiB
done

}


formatdatatofile()
{   
    local diskinfo=$(lsscsi -s | grep B$ | awk '{print $(NF -1)}')
    local diskinfo_arr=(${diskinfo// / })
    local outfile="$1"
    local datatype="$2"
    [ -f ${datadir}/${datatype} ] && rm -f ${datadir}/${datatype}
    for ((i=0;i<${#diskinfo_arr[@]};i++))
    do  
        if [ "${diskinfo_arr[i]}" == "/dev/sda" ];then
          # echo "skip ${diskinfo_arr[i]}"
           continue
        fi
        var=$(grep "${diskinfo_arr[i]}" -A 1 ${outfile} |grep -Eo 'bw=[0-9]+'|awk '{print }'|awk -F'=' '{print $2}')
        if [ -z "$var" ];then
            var=0
        fi
        echo -e "${diskinfo_arr[i]}\t${datatype}\t${var}"| tee -a  ${datadir}/${datatype}
   done
}





if [ $# -ne 2 ];then
    echo "Usage: sh $0 arg1[ METHOD ]  arg2[ BS ]"
    exit 1
fi


datadir=${Datadir}/disk
logdir=${Logdir}/disk
info="DISKINFO"
[ -f ${datadir}/${info} ] && rm -f ${datadir}/${info}
[ -d ${datadir} ] || mkdir -p ${datadir}
[ -d ${logdir} ] || mkdir -p ${logdir}

FNAME="fio_ini.ini"


METHOD="$1"
BS="$2"
RUNTIME=1200

RES_LOG="${logdir}/FIO_${METHOD}_${BS}.log"
case $METHOD in 
    # 顺序度
    read)
        IODEPTH=32
        test -f $FNAME && rm -f $FNAME 
        genHead
        preconf
        fio --eta=always $FNAME > $RES_LOG
        formatdatatofile ${RES_LOG} bk_${METHOD}_${BS}
        ;;
    #随机读
    randread)
        IODEPTH=128     
        test -f $FNAME && rm -f $FNAME
        genHead
        preconf
        fio --eta=always $FNAME > $RES_LOG
        formatdatatofile ${RES_LOG} bk_${METHOD}_${BS}         
        ;;
    # 顺序写
    write)
        IODEPTH=32
        test -f $FNAME && rm -f $FNAME
        genHead
        preconf
        fio --eta=always $FNAME > $RES_LOG
        formatdatatofile ${RES_LOG} bk_${METHOD}_${BS}
	;;
    # 随机写
    randwrite)
        IODEPTH=32
        test -f $FNAME && rm -f $FNAME
        genHead
        preconf
        fio --eta=always $FNAME > $RES_LOG
        formatdatatofile ${RES_LOG} bk_${METHOD}_${BS}
	;;
    # 混合随机读写
    randrw) 
        IODEPTH=32
        test -f $FNAME && rm -f $FNAME
        genHead
        preconf
        fio --eta=always $FNAME > $RES_LOG
        formatdatatofile ${RES_LOG} bk_${METHOD}_${BS}
	;;
    *)
        echo -e "METHOD : read/randread/write/randwrite/randrw \
             BS : 4K/1M/2M"
        exit 2
esac
